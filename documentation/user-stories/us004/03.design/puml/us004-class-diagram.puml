@startuml
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
skinparam classAttributeIconSize 0

package "UI" {
    class RegisterClientUI {
    }
}

package "Controller" {
    class ClientController {
        +updateClientStatus() : List<Client>
    }
}

package "Service" {
    class ClientService {
        +getClients() : List<Client>
        +updateClientStatus() : List<Client>
    }
}

package "Repository" {
    class Repositories {
        -Repositories()
        +getInstance() : Repositories
        +getClientRepository() : ClientRepository
    }

    class ClientRepository {
        +getAll() : List<Client>
        +updateStatus(client) : boolean
    }

}

package "Model" {
    class Client {
        -clientID : int
        -address : Address
        -name : String
        -vatin : String
        -phoneNumber : int
        -email : String
        -type : CompanyType
        -state : EntityState
        -orders : List<Order>
        +Client(clientID, name, address, vatin, phoneNumber, email, type)
    }

    class Order {
        -orderID : int
        -deliveryAddress : Address
        -orderDate : Date
        -deliveryDate : Date
        -price : double
        -state : ProcessState
        -productQuantity : Map<Product, Integer>
        +Order(orderID, deliveryAddress, orderID, deliveryDate, price, productQuantity)
    }

    enum EntityState {
        ACTIVE
        INACTIVE
    }

}


RegisterClientUI ..> ClientController
ClientController ..> ClientService
ClientService ..> Repositories : repositories
ClientService ..> ClientRepository : clientRepository
ClientService ..> Client : client
Repositories --> Repositories : instance
Repositories "1" --> "1" ClientRepository : clientRepository
ClientRepository "1" --> "*" Client : categories
Client "1" --> "*" Order : has
Client "*" --> "1" EntityState : has

@enduml
